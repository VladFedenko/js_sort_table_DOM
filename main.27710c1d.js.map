{"version":3,"sources":["scripts/main.js"],"names":["table","document","querySelector","head","dataArray","salaryToNumber","salary","slice","split","join","toFormat","data","resultString","toString","result","length","push","children","row","rowObject","name","innerText","position","age","sortTable","toSort","colum","toLowerCase","sort","a","b","localeCompare","i","innerHTML","addEventListener","evnt","target"],"mappings":"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","file":"main.27710c1d.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst table = document.querySelector('tbody');\nconst head = document.querySelector('thead');\n\nconst dataArray = [];\n\nfunction salaryToNumber(salary) {\n  return salary.slice(1).split(',').join('');\n}\n\nfunction toFormat(data) {\n  let resultString = data.toString();\n  const result = [];\n\n  do {\n    if (resultString.length % 3) {\n      result.push(resultString.slice(0, resultString.length % 3));\n      resultString = resultString.slice(resultString.length % 3);\n    }\n    result.push(resultString.slice(0, 3));\n    resultString = resultString.slice(3);\n  } while (resultString.length > 0);\n\n  return `$${result.join(',')}`;\n}\n\nfor (const row of table.children) {\n  const rowObject = {};\n\n  rowObject.name = row.children[0].innerText;\n  rowObject.position = row.children[1].innerText;\n  rowObject.age = row.children[2].innerText;\n  rowObject.salary = +salaryToNumber(row.children[3].innerText);\n  dataArray.push(rowObject);\n}\n\nfunction sortTable(toSort, colum) {\n  if (typeof toSort[0][colum.toLowerCase()] === 'string') {\n    toSort.sort((a, b) =>\n      a[colum.toLowerCase()].localeCompare(b[colum.toLowerCase()]));\n  } else {\n    toSort.sort((a, b) => a[colum.toLowerCase()] - b[colum.toLowerCase()]);\n  }\n\n  for (let i = 0; i < table.children.length; i++) {\n    table.children[i].innerHTML = `\n      <td>${dataArray[i].name}</td>\n      <td>${dataArray[i].position}</td>\n      <td>${dataArray[i].age}</td>\n      <td>${toFormat(dataArray[i].salary)}</td>\n    `;\n  }\n}\n\nhead.addEventListener('click', (evnt) => {\n  sortTable(dataArray, evnt.target.innerText);\n});\n"]}